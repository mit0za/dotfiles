
# █░█░█ █ █▄░█ █▀▄ █▀█ █░█░█   █▀█ █░█ █░░ █▀▀ █▀
# ▀▄▀▄▀ █ █░▀█ █▄▀ █▄█ ▀▄▀▄▀   █▀▄ █▄█ █▄▄ ██▄ ▄█


# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more

# windowrulev2 = opacity 0.90 0.90,class:^(firefox)$
# windowrulev2 = opacity 0.80 0.80,class:^(Steam)$
# windowrulev2 = opacity 0.80 0.80,class:^(steam)$
# windowrulev2 = opacity 0.80 0.80,class:^(steamwebhelper)$
# windowrulev2 = opacity 0.80 0.80,class:^(Spotify)$
# windowrulev2 = opacity 0.80 0.80,class:^(Code)$
# windowrulev2 = opacity 0.80 0.80,class:^(code-url-handler)$
#  windowrulev2 = opacity 0.80 0.80,class:^(kitty)$
# windowrulev2 = opacity 0.80 0.80,class:^(org.kde.dolphin)$
# windowrulev2 = opacity 0.80 0.80,class:^(org.kde.ark)$
# windowrulev2 = opacity 0.80 0.80,class:^(nwg-look)$
# windowrulev2 = opacity 0.80 0.80,class:^(qt5ct)$

#  windowrulev2 = opacity 0.90 0.90,class:^(com.github.rafostar.Clapper)$ #Clapper-Gtk
#  windowrulev2 = opacity 0.80 0.80,class:^(com.github.tchx84.Flatseal)$ #Flatseal-Gtk
#  windowrulev2 = opacity 0.80 0.80,class:^(hu.kramo.Cartridges)$ #Cartridges-Gtk
#  windowrulev2 = opacity 0.80 0.80,class:^(com.obsproject.Studio)$ #Obs-Qt
#  windowrulev2 = opacity 0.80 0.80,class:^(gnome-boxes)$ #Boxes-Gtk
#  windowrulev2 = opacity 0.80 0.80,class:^(discord)$ #Discord-Electron
#  windowrulev2 = opacity 0.80 0.80,class:^(WebCord)$ #WebCord-Electron
#  windowrulev2 = opacity 0.80 0.80,class:^(app.drey.Warp)$ #Warp-Gtk
#  windowrulev2 = opacity 0.80 0.80,class:^(net.davidotek.pupgui2)$ #ProtonUp-Qt
#  windowrulev2 = opacity 0.80 0.80,class:^(yad)$ #Protontricks-Gtk
#  windowrulev2 = opacity 0.80 0.80,class:^(Signal)$ #Signal-Gtk
#  windowrulev2 = opacity 0.80 0.80,class:^(io.gitlab.theevilskeleton.Upscaler)$ #Upscaler-Gtk

#  windowrulev2 = opacity 0.80 0.70,class:^(pavucontrol)$
#  windowrulev2 = opacity 0.80 0.70,class:^(blueman-manager)$
#  windowrulev2 = opacity 0.80 0.70,class:^(nm-applet)$
#  windowrulev2 = opacity 0.80 0.70,class:^(nm-connection-editor)$
#  windowrulev2 = opacity 0.80 0.70,class:^(org.kde.polkit-kde-authentication-agent-1)$

windowrulev2 = float,class:^(org.kde.ark)$
windowrulev2 = float,class:^(Signal)$ #Signal-Gtk
windowrulev2 = float,class:^(com.github.rafostar.Clapper)$ #Clapper-Gtk
windowrulev2 = float,class:^(app.drey.Warp)$ #Warp-Gtk
windowrulev2 = float,class:^(net.davidotek.pupgui2)$ #ProtonUp-Qt
windowrulev2 = float,class:^(yad)$ #Protontricks-Gtk
windowrulev2 = float,class:^(eog)$ #Imageviewer-Gtk
windowrulev2 = float,class:^(io.gitlab.theevilskeleton.Upscaler)$ #Upscaler-Gtk
windowrulev2 = float,class:^(pavucontrol)$
windowrulev2 = float,class:^(blueman-manager)$
windowrulev2 = float,class:^(nm-applet)$
windowrulev2 = float,class:^(nm-connection-editor)$
windowrulev2 = float,class:^(org.kde.polkit-kde-authentication-agent-1)$


# Take from main file
#window rules, for floating/center etc
windowrule = maxsize 600 800, ^(pavucontrol)$
windowrule = center, ^(pavucontrol)$
windowrule = float, ^(pavucontrol)$
windowrule = tile, ^(libreoffice)$
windowrule = float, ^(blueman-manager)$
windowrule = nofullscreenrequest, ^(.*libreoffice.*)$
windowrule = size 490 600, ^(org.gnome.Calculator)$
windowrule = float, ^(org.gnome.Calculator)$
windowrule = float, ^(org.kde.polkit-kde-authentication-agent-1)$
windowrule = float, title:^(Confirm to replace files)$
windowrule = center, ^(eog)$
windowrule = float, ^(eog)$
windowrule = float, ^(imv)$
windowrule = float, title:^(Steam - News)$

# Generated windows.
windowrule = float, title:^(?:Open|Save) 
windowrule = float, title:^(?:File|Folder|As)$
windowrule = float, title:Open File
windowrule = float, title:branchdialog
windowrule = float, title:branchdialog
#windowrule = float, nwg-look
windowrule = float, nm-connection-editor
windowrule = center, nm-connection-editor
windowrule = float, org.fcitx.fcitx5-config-qt
windowrule = center, org.fcitx.fcitx5-config-qt
windowrule = size 850 425, xdg-desktop-portals
windowrule = float, title:^(File Operation Progress)$

# Firefox rules
windowrulev2 = float, class:^(firefox)$, title:^(Library)$

# Picture-in-Picture
windowrulev2 = float,class:^(firefox)$,title:^(Picture-in-Picture)$
windowrulev2 = pin,class:^(firefox)$,title:^(Picture-in-Picture)$
windowrulev2 = nofullscreenrequest,class:^(firefox)$,title:^(Picture-in-Picture)$
# figma micro indicator
windowrulev2 = nofullscreenrequest,class:^(firefox)$,title:^(Firefox — Sharing Indicator)$
windowrulev2 = float,class:^(firefox)$,title:^(Firefox — Sharing Indicator)$
# save image
windowrulev2 = nofullscreenrequest,class:^(firefox)$,title:^(Save Image)$
windowrulev2 = float,class:^(firefox)$,title:^(Save Image)$
# save as
windowrulev2 = nofullscreenrequest,class:^(firefox)$,title:^(Save As)$
windowrulev2 = float,class:^(firefox)$,title:^(Save As)$
# file upload
windowrulev2 = nofullscreenrequest,class:^(firefox)$,title:(Upload)$
windowrulev2 = float,class:^(firefox)$,title:^(File Upload)$
# misc / replace file dialog
windowrulev2 = nofullscreenrequest,class:^(firefox)$,title:^()$
windowrulev2 = float,class:^(firefox)$,title:^()$
windowrule = fullscreen, wlogout
windowrule = float, title:wlogout
windowrule = fullscreen, title:wlogout

# Thunar
windowrulev2 = float, class:^(Thunar)$, title:^(File Operation Progress)$
windowrulev2 = float, class:^(Thunar)$, title:^(Confirm to replace files)$

#Nemo ?
#windowrulev2 = float, class:^(Nemo)$, title:^(File Operation Progress)$
#swindowrulev2 = float, class:^(Nemo)$, title:^(Confirm to replace files)$

#layerrule = blur, waybar
# apply blur on notification layer such as mako or dunst
#layerrule = blur, notifications 

# skip the blur on completely transparent parts (such as mako's margin)
#layerrule = ignorezero, notifications#
